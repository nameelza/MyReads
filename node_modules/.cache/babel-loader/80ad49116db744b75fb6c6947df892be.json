{"ast":null,"code":"import _classCallCheck from \"/Users/nameelza/Documents/React/MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nameelza/Documents/React/MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nameelza/Documents/React/MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nameelza/Documents/React/MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nameelza/Documents/React/MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nameelza/Documents/React/MyReads/src/AllBooks.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Shelf from \"./Shelf\";\n\nfunction getName(str) {\n  switch (str) {\n    case \"currentlyReading\":\n      return \"Currently Reading\";\n\n    case \"wantToRead\":\n      return \"Want to Read\";\n\n    case \"read\":\n      return \"Read\";\n\n    default:\n      return null;\n  }\n}\n\nvar AllBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllBooks, _Component);\n\n  function AllBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: {}\n    };\n\n    _this.updateShelf = function (book, newShelf) {\n      var books = _this.state.books;\n      books[book.shelf].splice(books[book.shelf].indexOf(book), 1);\n      book.shelf = newShelf;\n\n      if (newShelf !== \"none\") {\n        if (!books[newShelf]) {\n          books[newShelf] = [];\n        }\n\n        books[newShelf].push(book);\n      }\n\n      _this.setState({\n        books: books\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AllBooks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        var inCategories = {};\n        books.forEach(function (book) {\n          if (book.shelf !== \"none\") {\n            if (!inCategories[book.shelf]) {\n              inCategories[book.shelf] = [];\n            }\n\n            inCategories[book.shelf].push(book);\n          }\n        });\n\n        _this2.setState({\n          books: inCategories\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, Object.keys(this.state.books).map(function (shelf) {\n        return React.createElement(\"div\", {\n          className: \"bookshelf\",\n          key: shelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"bookshelf-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, getName(shelf)), React.createElement(\"div\", {\n          className: \"bookshelf-books\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Shelf, {\n          shelfBooks: _this3.state.books[shelf],\n          updateShelf: _this3.updateShelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })));\n      }))), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return AllBooks;\n}(Component);\n\nexport default AllBooks;","map":{"version":3,"sources":["/Users/nameelza/Documents/React/MyReads/src/AllBooks.js"],"names":["React","Component","Link","BooksAPI","Shelf","getName","str","AllBooks","state","books","updateShelf","book","newShelf","shelf","splice","indexOf","push","setState","getAll","then","inCategories","forEach","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Shelf from \"./Shelf\";\n\nfunction getName(str) {\n  switch (str) {\n    case \"currentlyReading\":\n      return \"Currently Reading\";\n    case \"wantToRead\":\n      return \"Want to Read\";\n    case \"read\":\n      return \"Read\";\n    default:\n      return null;\n  }\n}\n\nclass AllBooks extends Component {\n  state = {\n    books: {},\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      let inCategories = {};\n      books.forEach((book) => {\n        if (book.shelf !== \"none\") {\n          if (!inCategories[book.shelf]) {\n            inCategories[book.shelf] = [];\n          }\n          inCategories[book.shelf].push(book);\n        }\n      });\n      this.setState({ books: inCategories });\n    });\n  }\n\n  updateShelf = (book, newShelf) => {\n    let books = this.state.books;\n    books[book.shelf].splice(books[book.shelf].indexOf(book), 1);\n    book.shelf = newShelf;\n    if (newShelf !== \"none\") {\n      if (!books[newShelf]) {\n        books[newShelf] = [];\n      }\n      books[newShelf].push(book);\n    }\n    this.setState({ books: books });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"list-books-content\">\n          <div>\n            {Object.keys(this.state.books).map((shelf) => (\n              <div className=\"bookshelf\" key={shelf}>\n                <h2 className=\"bookshelf-title\">{getName(shelf)}</h2>\n                <div className=\"bookshelf-books\">\n                  <Shelf\n                    shelfBooks={this.state.books[shelf]}\n                    updateShelf={this.updateShelf}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"open-search\">\n          <Link to=\"/search\">\n            <button>Add a book</button>\n          </Link>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AllBooks;\n"]},"metadata":{},"sourceType":"module"}