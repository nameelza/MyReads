{"ast":null,"code":"var _jsxFileName = \"/Users/nameelza/Documents/React/MyReads/src/AllBooks.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Shelf from \"./Shelf\";\n\nfunction AllBooks(_ref) {\n  var books = _ref.books;\n\n  function getName(str) {\n    switch (str) {\n      case \"currentlyReading\":\n        return \"Currently Reading\";\n\n      case \"wantToRead\":\n        return \"Want to Read\";\n\n      case \"read\":\n        return \"Read\";\n\n      default:\n        return null;\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"list-books-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, Object.keys(books).map(function (shelf) {\n    return React.createElement(\"div\", {\n      className: \"bookshelf\",\n      key: shelf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"bookshelf-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, getName(shelf)), React.createElement(\"div\", {\n      className: \"bookshelf-books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Shelf, {\n      shelfBooks: books[shelf],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  }))), React.createElement(\"div\", {\n    className: \"open-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add a book\"))));\n}\n\nexport default AllBooks;","map":{"version":3,"sources":["/Users/nameelza/Documents/React/MyReads/src/AllBooks.js"],"names":["React","Link","Shelf","AllBooks","books","getName","str","Object","keys","map","shelf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,SAASC,QAAT,OAA2B;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AACvB,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,YAAQA,GAAR;AACE,WAAK,kBAAL;AACE,eAAO,mBAAP;;AACF,WAAK,YAAL;AACE,eAAO,cAAP;;AACF,WAAK,MAAL;AACE,eAAO,MAAP;;AACF;AACE,eAAO,IAAP;AARJ;AAUD;;AACL,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,GAAnB,CAAuB,UAACC,KAAD;AAAA,WACtB;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCL,OAAO,CAACK,KAAD,CAAxC,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAEN,KAAK,CAACM,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADsB;AAAA,GAAvB,CADH,CADF,CADF,EAaE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CAbF,CADF;AAqBD;;AAED,eAAeP,QAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Shelf from \"./Shelf\";\n\n\nfunction AllBooks({books}) {\n    function getName(str) {\n        switch (str) {\n          case \"currentlyReading\":\n            return \"Currently Reading\";\n          case \"wantToRead\":\n            return \"Want to Read\";\n          case \"read\":\n            return \"Read\";\n          default:\n            return null;\n        }\n      }\n  return (\n    <>\n      <div className=\"list-books-content\">\n        <div>\n          {Object.keys(books).map((shelf) => (\n            <div className=\"bookshelf\" key={shelf}>\n              <h2 className=\"bookshelf-title\">{getName(shelf)}</h2>\n              <div className=\"bookshelf-books\">\n                <Shelf shelfBooks={books[shelf]} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"open-search\">\n        <Link to=\"/search\">\n          <button>Add a book</button>\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default AllBooks;\n"]},"metadata":{},"sourceType":"module"}